apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  labels:
    app: my-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: my-app-container
        image: 692859920006.dkr.ecr.us-west-2.amazonaws.com/dev/maven-repo:latest # ECR image URI
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: my-app-service
spec:
  selector:
    app: my-app
  ports:
    - name: http
      port: 8080           # This should match the port number used in the Ingress
      targetPort: 8080    # This is the port where your application is running inside the pods
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-app-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing         # Can be internet-facing or internal
    alb.ingress.kubernetes.io/backend-protocol: HTTP         # Protocol for communication with the backend service
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-port: "8080"
    alb.ingress.kubernetes.io/healthcheck-path: "/api-service/hello"
spec:
  rules:
  - host: my-app.example.com
    http:
      paths:
      - path: /api-service
        pathType: Prefix
        backend:
          service:
            name: my-app-service
            port:
              number: 8080  # Ensure this matches the service's exposed port
